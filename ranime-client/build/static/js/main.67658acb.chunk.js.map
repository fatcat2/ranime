{"version":3,"sources":["Home.js","AdvancedSearch.js","RandomAnime.js","App.js","serviceWorker.js","index.js"],"names":["nsfwOptions","key","text","value","Home","state","nsfw","link","onChange","bind","e","d","console","log","name","this","setState","Grid","centered","columns","Column","class","Container","Header","as","color","to","Button","Divider","Dropdown","inline","options","defaultValue","React","Component","rangeInclusive","require","AdvancedSearch","year","yearOptions","years","reverse","push","parseInt","search","color_dict","RandomAnime","props","id","title","genres","image","description","aired","externalLinks","render","parsed","queryString","parse","location","Object","keys","length","axios","post","then","res","data","external_links","get","watchButtons","entries","Card","Meta","href","url","fluid","ui","site","stackable","Row","Segment","Image","src","onClick","window","reload","className","Description","GridColumn","Main","path","exact","component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67658acb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport {\n  Container,\n  Header,\n  Grid,\n  Button,\n  Dropdown,\n  Divider,\n} from \"semantic-ui-react\";\n\nimport { Link } from \"react-router-dom\";\n\nconst nsfwOptions = [\n  {\n    key: \"sfw\",\n    text: \"only SFW\",\n    value: 0,\n  },\n  {\n    key: \"nsfw\",\n    text: \"only NSFW\",\n    value: 1,\n  },\n  {\n    key: \"both\",\n    text: \"SFW and NSFW\",\n    value: 2,\n  },\n];\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      nsfw: 0,\n      link: \"/anime\",\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e, d) {\n    console.log(d.value);\n\n    if (d.name === \"nsfw\") {\n      this.setState({ nsfw: d.value });\n      let link = `/anime?nsfw=${d.value}`;\n      this.setState({ link: link });\n    }\n  }\n\n  render() {\n    return (\n      <Grid centered columns={1}>\n        <Grid.Column>\n          <div class=\"App-header\">\n            <Container>\n              <Header as=\"h1\" color=\"black\">\n                random anime\n              </Header>\n              <Link to={this.state.link}>\n                <Button color=\"blue\">Give me a show!</Button>\n              </Link>\n            </Container>\n            <Divider />\n            <Container text>\n              <p>\n                Show me{\" \"}\n                <Dropdown\n                  name=\"nsfw\"\n                  inline\n                  options={nsfwOptions}\n                  defaultValue={nsfwOptions[0].value}\n                  onChange={this.onChange}\n                />\n                shows.\n              </p>\n            </Container>\n          </div>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  Card,\n  Image,\n  Container,\n  Grid,\n  Button,\n  Segment,\n  GridColumn,\n  Dropdown,\n  Header,\n  Divider,\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nimport axios from \"axios\";\n\nvar rangeInclusive = require('range-inclusive')\n\nconst nsfwOptions = [\n  {\n    key: \"sfw\",\n    text: \"only SFW\",\n    value: 0,\n  },\n  {\n    key: \"nsfw\",\n    text: \"only NSFW\",\n    value: 1,\n  },\n  {\n    key: \"both\",\n    text: \"SFW and NSFW\",\n    value: 2,\n  },\n];\n\nclass AdvancedSearch extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      nsfw: 0,\n      year: 1950,\n      link: \"/anime\",\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e, d) {\n    console.log(d.value);\n\n    if (d.name === \"nsfw\") {\n      this.setState({ nsfw: d.value });\n      let link = `/anime?nsfw=${d.value}&seasonYear=${this.state.year}`;\n      this.setState({ link: link });\n    }else if (d.name === \"seasonYear\") {\n        this.setState({ year: d.value });\n        let link = `/anime?nsfw=${this.state.nsfw}&seasonYear=${d.value}`;\n        this.setState({ link: link });\n      }\n  }\n\n  \n\n  render() {\n    var year;\n    var yearOptions = []\n    var years = rangeInclusive(1950, 2020)\n    years.reverse()\n    for(year in years){\n        yearOptions.push(\n            {\n                key: parseInt(years[year]),\n                text: parseInt(years[year]),\n                value: parseInt(years[year]),\n            }\n        )\n    }\n\n    console.log(yearOptions)\n    return (\n      <Grid centered columns={1}>\n        <Grid.Column>\n          <div class=\"App-header\">\n            <Container>\n              <Header as=\"h1\" color=\"black\">\n                /advanced\n              </Header>\n\n              <Link to={this.state.link}>\n                <Button color=\"blue\">Give me a show!</Button>\n              </Link>\n            </Container>\n            <Divider />\n            <Container text>\n              <p>\n                Show me{\" \"}\n                <Dropdown\n                  name=\"nsfw\"\n                  inline\n                  options={nsfwOptions}\n                  defaultValue={nsfwOptions[0].value}\n                  onChange={this.onChange}\n                />\n                shows.\n              </p>\n            </Container>\n            <Divider />\n            <Container text>\n              <p>\n                Show me shows from year {\" \"}\n                <Dropdown\n                  name=\"seasonYear\"\n                  search\n                  options={yearOptions}\n                  defaultValue={yearOptions[0].value}\n                  onChange={this.onChange}\n                />.\n              </p>\n            </Container>\n          </div>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default AdvancedSearch;\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  Card,\n  Image,\n  Container,\n  Grid,\n  Button,\n  Segment,\n  GridColumn,\n} from \"semantic-ui-react\";\n\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport queryString from \"query-string\";\n\nconst color_dict = {\n  \"Netflix\": \"red\",\n  \"Hulu\": \"olive\",\n  \"Crunchyroll\": \"orange\",\n  \"HBO Max\": \"purple\",\n  \"Funimation\": \"violet\",\n  \"Twitter\": \"twitter\",\n  \"Amazon\": \"brown\",\n  \"VRV\": \"yellow\"\n}\n\nclass RandomAnime extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      name: \"\",\n      title: \"Loading...\",\n      genres: [],\n      image: \"https://media1.giphy.com/media/AAmhvrZzLCz1m/giphy.gif\",\n      description:\n        \"いづれの御時にか、女御、更衣あまたさぶらひたまひけるなかに、いとやむごとなき際にはあらぬが、すぐれて時めきたまふありけり。はじめより我はと思ひ上がりたまへる御方がた、めざましきものにおとしめ嫉みたまふ。同じほど、それより下臈の更衣たちは、ましてやすからず。朝夕の宮仕へにつけても、人の心をのみ動かし、恨みを負ふ積りにやありけむ、いとあつしくなりゆき、もの心細げに里がちなるを、いよいよあかずあはれなるものに思ほして、人の そし りをもえ憚らせたまはず、世のためしにもなりぬべき御もてなしなり。\",\n      aired: \"Aired in Spring 2020\",\n      externalLinks: [{\"url\": \"https://torrtle.co\", \"site\": \"Netflix\"}, {\"url\": \"https://torrtle.co\", \"site\": \"Netflix\"}]\n    };\n    this.render=this.render.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = queryString.parse(this.props.location.search);\n    console.log(parsed);\n    if (Object.keys(parsed).length > 0) {\n      axios.post(`/data/anime`, parsed).then((res) => {\n        const title = res.data.title;\n        const genres = res.data.genres;\n        const image = res.data.image;\n        const description = res.data.description;\n        const aired = res.data.aired;\n        const externalLinks = res.data.external_links;\n        const id = res.data.id;\n        this.setState({ title });\n        this.setState({ genres });\n        this.setState({ image });\n        this.setState({ description });\n        this.setState({ aired });\n        this.setState({ externalLinks });\n        this.setState({ id });\n      });\n    } else {\n      axios.get(`/data/anime`).then((res) => {\n        const title = res.data.title;\n        const genres = res.data.genres;\n        const image = res.data.image;\n        const description = res.data.description;\n        const aired = res.data.aired;\n        const externalLinks = res.data.external_links;\n        const id = res.data.id;\n        this.setState({ title });\n        this.setState({ genres });\n        this.setState({ image });\n        this.setState({ description });\n        this.setState({ aired });\n        this.setState({ externalLinks });\n        this.setState({ id });\n      });\n    }\n  }\n\n  render() {\n    var watchButtons = []\n    console.log(\"headsfa\")\n\n    for (const [index, value] of this.state.externalLinks.entries()) {\n      watchButtons.push(<Card.Meta id=\"linkButton\"><a href={value.url}><Button fluid ui  color={color_dict[value.site]}>{value.site}</Button></a></Card.Meta >)\n    }\n\n    return (\n      <div class=\"App-card\">\n        <Container text>\n          <Grid stackable columns={2}>\n            <Grid.Row>\n              <Grid.Column>\n                <Segment>\n                  <Image\n                    fluid\n                    src={this.state.image}\n                    onClick={() => {\n                      window.location.reload();\n                    }}\n                  />\n                </Segment>\n              </Grid.Column>\n              <Grid.Column>\n                <Segment>\n                  <h1>{this.state.title}</h1>\n                  <Card.Meta>\n                    <span className=\"date\">{this.state.aired}</span>\n                  </Card.Meta>\n                  <Card.Description id=\"cardDescription\">{this.state.description}</Card.Description>\n                  <Card.Meta id=\"linkButton\"><a href={\"https://anilist.co/anime/\" + this.state.id} ><Button color=\"blue\" fluid ui>{\"anilist\"}</Button></a></Card.Meta > \n                  {watchButtons}\n                </Segment>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n\n          <Grid stackable columns={1}>\n            <GridColumn>\n              <div class=\"refresh-button\">\n                <Button\n                  onClick={() => {\n                    window.location.reload();\n                  }}\n                >\n                  gimme a new one\n                </Button>\n              </div>\n\t\t<br/>\n              <div class=\"refresh-button\">\n\t    \t<Link to={\"/\"}>\n                <Button>\n\t    \t\tbring me home !\n                </Button>\n\t    \t</Link>\n              </div>\n            </GridColumn>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default RandomAnime;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport AdvancedSearch from \"./AdvancedSearch\";\nimport RandomAnime from \"./RandomAnime\";\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/advanced\" exact component={AdvancedSearch} />\n        <Route path=\"/anime\" exact component={RandomAnime} />\n      </Router>\n    );\n  }\n}\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}